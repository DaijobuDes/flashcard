# Place this config file to /etc/nginx/sites-available
#
# Create a symbolic link of this file to /etc/nginx/sites-enabled
#
# Make sure the server is running on HTTPS.
# HTTP is not recommended on this configuration.


upstream flashcard_app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the Unicorn master nukes a
    # single worker for timing out).
    server unix:/tmp/gunicorn.sock fail_timeout=0;
}

server {
    # listen 80;
    listen 443;

    # Let's Encrypt SSL certificates
    ssl on;
    ssl_certificate /etc/ssl/private/letsencrypt-domain.pem;
    ssl_certificate_key /etc/ssl/private/letsencrypt-domain.key;

    # server_name flashcard;
    client_max_body_size 16M;

    # Logs
    access_log /home/narberal/flashcard/logs/nginx-access.log;
    error_log /home/narberal/flashcard/logs/nginx-error.log;


    location /static/ {
        alias /tmp/flashcard/static/;
    }

    location /media/ {
        alias /tmp/flashcard/media/;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        # http://en.wikipedia.org/wiki/X-Forwarded-For

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:

        proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application

        proxy_set_header Host $http_host;

        # we dont want nginx trying to do something clever with
        # redirects, we set the Host: header above already.

        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  Its also safe to set if you are
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.

        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.

        if (!-f $request_filename) {
            proxy_pass http://flashcard_app_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /tmp/flashcard/static/;
    }
}
